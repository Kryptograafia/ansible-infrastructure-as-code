---
- name: Create /opt/agama directory
  ansible.builtin.file:
    path: /opt/agama
    state: directory
    # mode: '0755'

- name: Download Agama and Dockerfile
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: "/opt/agama/{{ item.split('/')[-1] }}"
  loop:
    - "https://raw.githubusercontent.com/hudolejev/agama/master/agama.py"
    - "https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile"

- name: Build Agama Docker image
  community.docker.docker_image:
    name: agama
    source: build
    build:
      path: /opt/agama
    state: present

- name: Run Agama containers
  community.docker.docker_container:
    name: "{{ ansible_hostname }}_agama_{{ item }}"
    image: agama
    state: started
    restart_policy: always
    published_ports:
      - "{{ agama_port | int + item | int - 1 }}:8000"
    env:
      AGAMA_DATABASE_URI: "mysql+pymysql://{{ mysql_user }}:{{ mysql_password }}@{{ mysql_host }}/{{ mysql_database }}"
    volumes:
      - "/opt/agama:/opt/agama"
  loop: "{{ range(1, agama_container_count | int + 1) | list }}"
  no_log: true

#- name: Remove extra Agama containers
  #community.docker.docker_container:
    #name: "agama_{{ item }}"
   # state: absent
  #loop: "{{ range(agama_container_count | int + 1, max_existing_containers + 1) | list }}"
 # vars:
#    max_existing_containers: "{{ lookup('community.docker.docker_containers', filters={'ancestor': 'agama'}) | length }}"

- include_role:
      name: dns_record
  vars:
      dns_record:
          "www{{ inventory_hostname | replace('Kryptograafia', '') }}"
