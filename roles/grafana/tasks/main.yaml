- name: Ensure Grafana directories exist
  ansible.builtin.file:
    path: "/opt/grafana/provisioning/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - dashboards
    - datasources

- name: Ensure Grafana template configuration files exist
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - { src: grafana.ini.j2, dest: /opt/grafana/grafana.ini }
    - { src: datasource.yaml.j2, dest: /opt/grafana/provisioning/datasources/default.yaml }
    - { src: dashboard.yaml.j2, dest: /opt/grafana/provisioning/dashboards/default.yaml }
  notify:  Restart Grafana Docker container
  no_log: true

- name: Ensure Grafana configuration files exist
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - { src: backups.json, dest: /opt/grafana/provisioning/dashboards/backups.json }
    - { src: main.json, dest: /opt/grafana/provisioning/dashboards/main.json }
    - { src: mysql.json, dest: /opt/grafana/provisioning/dashboards/mysql.json }
    - { src: syslog.json, dest: /opt/grafana/provisioning/dashboards/syslog.json }
  notify:  Restart Grafana Docker container

- name: Pull Grafana Docker image
  community.docker.docker_image:
    name: grafana/grafana:latest
    source: pull

- name: Ensure Grafana container is running
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana:latest
    state: started
    restart_policy: unless-stopped
    published_ports:
      - "{{ grafana_port }}:3000"
    volumes:
      - "/var/lib/grafana:/var/lib/grafana"
      - "/opt/grafana:/etc/grafana"
    user: "{{ ansible_user_id }}"
  notify:
    - Restart Grafana Docker container

- include_role:
      name: dns_record
  vars:
      dns_record: grafana
