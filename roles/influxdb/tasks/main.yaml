---

# Setup InfluxDB repository and install the software
- name: Add InfluxData GPG key
  ansible.builtin.apt_key:
    url: https://repos.influxdata.com/influxdata-archive_compat.key
    state: present

- name: Add InfluxDB repository
  ansible.builtin.apt_repository:
    repo: "deb https://repos.influxdata.com/debian stable main"
    state: present

- name: Install InfluxDB
  ansible.builtin.apt:
    name: influxdb=1.8.10-1
    state: present

- name: Copy influxdb.conf
  ansible.builtin.template:
    src: influxdb.conf.j2
    dest: /etc/influxdb/influxdb.conf.j2
  notify: Restart InfluxDB

- name: Start and enable InfluxDB service
  ansible.builtin.service:
    name: influxdb
    state: started
    enabled: yes

# Setup InfluxDB stats exporter
- name: Download InfluxDB stats exporter
  ansible.builtin.get_url:
    url: "https://github.com/carlpett/influxdb_stats_exporter/releases/download/v0.1.1/influx_stats_exporter_linux_amd64"
    dest: /usr/local/bin/influxdb_stats_exporter
    mode: '0755'

- name: Set ownership for InfluxDB stats exporter binary
  ansible.builtin.file:
    path: /usr/local/bin/influxdb_stats_exporter
    owner: prometheus
    group: prometheus
    mode: '0755'

- name: Create systemd service for InfluxDB stats exporter
  ansible.builtin.template:
    src: prometheus-influxdb-stats-exporter.service.j2
    dest: /etc/systemd/system/prometheus-influxdb-stats-exporter.service
    mode: '0755'
  notify: Reload systemd

- name: Enable and start InfluxDB stats exporter service
  ansible.builtin.systemd:
    name: prometheus-influxdb-stats-exporter
    enabled: true
    state: started

# Install and configure Telegraf
- name: Install Telegraf
  ansible.builtin.apt:
    name: telegraf
    state: present

- name: Copy Telegraf configuration
  ansible.builtin.template:
    src: telegraf.conf.j2
    dest: /etc/telegraf/telegraf.conf
  notify: Restart Telegraf

- name: Start and enable Telegraf service
  ansible.builtin.service:
    name: telegraf
    state: started
    enabled: yes

# Backup setup
- name: Ensure /home/backup/influxdb directory exists
  ansible.builtin.file:
    path: /home/backup/influxdb
    state: directory
    owner: backup
    group: backup
    mode: '0755'

- name: Create cron job for InfluxDB backup
  ansible.builtin.cron:
    name: "InfluxDB backup"
    minute: "3"
    hour: "00"
    day: "*"
    month: "*"
    weekday: "*"
    user: "backup"
    job: "rm -rf /home/backup/influxdb/*; influxd backup -portable -db telegraf /home/backup/influxdb"
    cron_file: "/etc/cron.d/influxdb-backup"
    state: present

- name: Add Duplicity full backup job
  ansible.builtin.lineinfile:
    path: "/etc/cron.d/influxdb-backup"
    regexp: "^.*duplicity.*full.*$"
    line: "4 00 * * * backup duplicity --no-encryption full /home/backup/influxdb/ rsync://Kryptograafia@backup.kryptograafia.io/influxdb"
    state: present

- name: Add Duplicity incremental backup job
  ansible.builtin.lineinfile:
    path: "/etc/cron.d/influxdb-backup"
    regexp: "^.*duplicity.*incremental.*$"
    line: "5 00 * * * backup duplicity --no-encryption incremental /home/backup/influxdb/ rsync://Kryptograafia@backup.kryptograafia.io/influxdb"
    state: present

# DNS record management
- include_role:
    name: dns_record
  vars:
    dns_record: influxdb
