- name: Install Bind9 service
  ansible.builtin.apt:
    name: bind9
    state: present

- name: Copy the bind DNS named and local configuration to VM2
  ansible.builtin.template:
    src: named.conf.{{ item }}.j2
    dest: /etc/bind/named.conf.{{ item }}
  loop:
    - options
    - local
  notify: rndc sync #Restart bind if there is a configuration change
  no_log: true

- name: Create master zone file and copy it to VM3
  ansible.builtin.template:
    src: db.kryptograafia.io.j2
    dest: /var/cache/bind/db.kryptograafia.io
    force: no
    owner: bind
    group: bind
    mode: '0644'
  notify:
    #-  Reload DNS zone file
    -  Restart bind if there is a configuration change
  when: inventory_hostname in groups['dns_primary']

- name: Create reverse zone file and copy it to VM2
  ansible.builtin.template:
    src: db.rev.j2
    dest: /var/cache/bind/db.rev
    force: no
    owner: bind
    group: bind
    mode: '0644'
  notify:
    #-  Reload DNS zone file
    -  Restart bind if there is a configuration change
  when: inventory_hostname in groups['bind_servers']

- name: Ensure Bind9 is started and enabled
  ansible.builtin.service:
    name: bind9
    state: started
    enabled: yes

### Bind exporter
- name: Download Bind9 exporter
  ansible.builtin.get_url:
    url: https://github.com/prometheus-community/bind_exporter/releases/download/v0.6.1/bind_exporter-0.6.1.linux-amd64.tar.gz
    dest: /tmp/bind_exporter.tar.gz  # Temporary destination on the managed host

- name: Install Bind9 exporter
  ansible.builtin.unarchive:
    src: /tmp/bind_exporter.tar.gz
    dest: /usr/local/bin/
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: Copy the system definition to /etc/systemd/system/
  ansible.builtin.template:
    src: service_def.j2
    dest: /etc/systemd/system/bind_exporter.service
  notify: Reload systemd to apply changes

#- name: Reload systemd to apply changes
 # ansible.builtin.command: systemctl daemon-reload

- name: Start and enable Bind9 exporter service
  ansible.builtin.systemd:
    name: bind_exporter
    state: started
    enabled: yes

- meta: flush_handlers

- name: Add A record for backup server
  community.general.nsupdate:
    server: "{{ hostvars[groups['dns_primary'][0]]['ansible_default_ipv4']['address'] }}"
    zone: "{{ startup_domain }}"
    key_name: "nsupdate.key"
    key_algorithm: "hmac-sha256"
    key_secret: "{{ update_key_secret }}"
    record: backup
    type: A
    value: "{{ backup_server_ip }}"
    state: present
  run_once: true
  when: inventory_hostname in groups['dns_primary']
  no_log: true

- include_role:
      name: dns_record
  vars:
      dns_record:
          "ns{{ inventory_hostname | replace('Kryptograafia', '') }}"

- name: Stop and disable systemd-resolved service
  ansible.builtin.systemd:
    name: systemd-resolved
    state: stopped
    enabled: no

- name: Update the resolv file
  ansible.builtin.template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf
  delegate_to: "{{ item }}"
  with_items: "{{ groups['all'] }}"
  run_once: true
  notify: Restart bind if there is a configuration change
